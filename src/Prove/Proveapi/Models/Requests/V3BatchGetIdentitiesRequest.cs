//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Prove.Proveapi.Models.Requests
{
    using Prove.Proveapi.Utils;
    
    public class V3BatchGetIdentitiesRequest
    {

        /// <summary>
        /// A client-generated unique ID for a specific session. This can be used to identify specific requests. The format of this ID is defined by the client - Prove recommends using a GUID, but any format can be accepted. Do not include Personally Identifiable Information (PII) in this field.
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=clientRequestId")]
        public string? ClientRequestId { get; set; }

        /// <summary>
        /// The maximum number of identities to return per call. Default value is 100.
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")]
        public long? Limit { get; set; }

        /// <summary>
        /// The pagination token for the GET /v3/identity API. Use this to retrieve the next page of results after a previous call to GET /v3/identity. This token is returned as lastKey in the GET /v3/identity API response - pass it in directly as startKey to get the next page of results.
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=startKey")]
        public string? StartKey { get; set; }

        /// <summary>
        /// Whether to show identities associated with the current client that are currently marked as inactive. Default value is false.
        /// </summary>
        [SpeakeasyMetadata("queryParam:style=form,explode=true,name=showInactive")]
        public bool? ShowInactive { get; set; }
    }
}